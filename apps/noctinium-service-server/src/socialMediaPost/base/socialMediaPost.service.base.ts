/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  SocialMediaPost as PrismaSocialMediaPost,
  Event as PrismaEvent,
} from "@prisma/client";

export class SocialMediaPostServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SocialMediaPostCountArgs, "select">
  ): Promise<number> {
    return this.prisma.socialMediaPost.count(args);
  }

  async socialMediaPosts(
    args: Prisma.SocialMediaPostFindManyArgs
  ): Promise<PrismaSocialMediaPost[]> {
    return this.prisma.socialMediaPost.findMany(args);
  }
  async socialMediaPost(
    args: Prisma.SocialMediaPostFindUniqueArgs
  ): Promise<PrismaSocialMediaPost | null> {
    return this.prisma.socialMediaPost.findUnique(args);
  }
  async createSocialMediaPost(
    args: Prisma.SocialMediaPostCreateArgs
  ): Promise<PrismaSocialMediaPost> {
    return this.prisma.socialMediaPost.create(args);
  }
  async updateSocialMediaPost(
    args: Prisma.SocialMediaPostUpdateArgs
  ): Promise<PrismaSocialMediaPost> {
    return this.prisma.socialMediaPost.update(args);
  }
  async deleteSocialMediaPost(
    args: Prisma.SocialMediaPostDeleteArgs
  ): Promise<PrismaSocialMediaPost> {
    return this.prisma.socialMediaPost.delete(args);
  }

  async getEvent(parentId: string): Promise<PrismaEvent | null> {
    return this.prisma.socialMediaPost
      .findUnique({
        where: { id: parentId },
      })
      .event();
  }
}
